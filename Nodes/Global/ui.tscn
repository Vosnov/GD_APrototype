[gd_scene load_steps=4 format=3 uid="uid://en3g0v7xjkgn"]

[ext_resource type="PackedScene" uid="uid://dwhdypbxa1gl7" path="res://Nodes/UI/inventory_ui.tscn" id="1_vjmbd"]
[ext_resource type="PackedScene" uid="uid://bdvj6pfhtgs1e" path="res://Nodes/UI/dead_screen.tscn" id="2_e8xum"]

[sub_resource type="GDScript" id="GDScript_tkxjl"]
script/source = "extends CanvasLayer

@export var INVENTORY_UI: PackedScene
@export var DEAD_SCREEN: PackedScene

@onready var reload_label = $ReloadData
@onready var hp_label = $HP

var inventory_instance: Node
var dead_screen_instance: Node

func _ready():
	Events.connect(\"player_dead\", _on_player_dead)
	Events.connect(\"player_reload_data_ui\", _on_reload_data)
	Events.connect(\"player_hp_ui\", _on_player_hp_ui)

func close_inventory():
	get_tree().paused = false
	if inventory_instance != null: inventory_instance.queue_free()

func _on_reload_data(amount: int, total_amount: int):
	reload_label.text = str(\"Load amount: \", amount, \" Total amount: \", total_amount)

func _on_player_hp_ui(_hp: float):
	hp_label.text = str('HP: ', _hp)

func _input(_event):
	if dead_screen_instance != null: return
	if Input.is_action_just_pressed('ui_menu') and inventory_instance == null:
		inventory_instance = INVENTORY_UI.instantiate()
		add_child(inventory_instance)
		get_tree().paused = true
	if Input.is_action_just_pressed('ui_cancel'):
		close_inventory()

func _on_player_dead():
	close_inventory()
	dead_screen_instance = DEAD_SCREEN.instantiate()
	add_child(dead_screen_instance)
	get_tree().paused = true

func _exit_tree():
	get_tree().paused = false
"

[node name="UI" type="CanvasLayer"]
process_mode = 3
script = SubResource("GDScript_tkxjl")
INVENTORY_UI = ExtResource("1_vjmbd")
DEAD_SCREEN = ExtResource("2_e8xum")

[node name="ReloadData" type="Label" parent="."]
offset_right = 40.0
offset_bottom = 23.0

[node name="HP" type="Label" parent="."]
offset_top = 40.0
offset_right = 40.0
offset_bottom = 63.0
